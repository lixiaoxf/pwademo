!function(t){function e(e){for(var i,s,o=e[0],l=e[1],c=e[2],d=0,p=[];d<o.length;d++)s=o[d],a[s]&&p.push(a[s][0]),a[s]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(t[i]=l[i]);for(u&&u(e);p.length;)p.shift()();return r.push.apply(r,c||[]),n()}function n(){for(var t,e=0;e<r.length;e++){for(var n=r[e],i=!0,o=1;o<n.length;o++){var l=n[o];0!==a[l]&&(i=!1)}i&&(r.splice(e--,1),t=s(s.s=n[0]))}return t}var i={},a={2:0},r=[];function s(e){if(i[e])return i[e].exports;var n=i[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=t,s.c=i,s.d=function(t,e,n){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)s.d(n,i,function(e){return t[e]}.bind(null,i));return n},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="";var o=window.webpackJsonp=window.webpackJsonp||[],l=o.push.bind(o);o.push=e,o=o.slice();for(var c=0;c<o.length;c++)e(o[c]);var u=l;r.push([47,0]),n()}({17:function(t,e,n){"use strict";var i=n(59);n.n(i).a},18:function(t,e,n){"use strict";var i=n(61);n.n(i).a},19:function(t,e,n){"use strict";var i=n(63);n.n(i).a},2:function(t,e){!function(t,e){var n,i=t.document,a=i.documentElement,r=i.querySelector('meta[name="viewport"]'),s=i.querySelector('meta[name="flexible"]'),o=0,l=0,c=e.flexible||(e.flexible={});if(r)(d=r.getAttribute("content").match(/initial\-scale=([\d\.]+)/))&&(l=parseFloat(d[1]),o=parseInt(1/l));else if(s){var u=s.getAttribute("content");if(u){var d=u.match(/initial\-dpr=([\d\.]+)/),p=u.match(/maximum\-dpr=([\d\.]+)/);d&&(o=parseFloat(d[1]),l=parseFloat((1/o).toFixed(2))),p&&(o=parseFloat(p[1]),l=parseFloat((1/o).toFixed(2)))}}if(!o&&!l){var v=(t.navigator.appVersion.match(/android/gi),t.navigator.appVersion.match(/iphone/gi)),f=t.devicePixelRatio;l=1/(o=v?f>=3&&(!o||o>=3)?3:f>=2&&(!o||o>=2)?2:1:1)}if(a.setAttribute("data-dpr",o),!r)if((r=i.createElement("meta")).setAttribute("name","viewport"),r.setAttribute("content","initial-scale="+l+", maximum-scale="+l+", minimum-scale="+l+", user-scalable=no"),a.firstElementChild)a.firstElementChild.appendChild(r);else{var h=i.createElement("div");h.appendChild(r),i.write(h.innerHTML)}function m(){var e=a.getBoundingClientRect().width/10;a.style.fontSize=e+"px",c.rem=t.rem=e}t.addEventListener("resize",function(){clearTimeout(n),n=setTimeout(m,300)},!1),t.addEventListener("orientationchange",function(){clearTimeout(n),n=setTimeout(m,300)},!1),t.addEventListener("pageshow",function(t){t.persisted&&(clearTimeout(n),n=setTimeout(m,300))},!1),"complete"===i.readyState?i.body.style.fontSize=12*o+"px":i.addEventListener("DOMContentLoaded",function(){i.body.style.fontSize=12*o+"px"},!1),m(),c.dpr=t.dpr=o,c.refreshRem=m,c.rem2px=function(t){var e=parseFloat(t)*this.rem;return"string"==typeof t&&t.match(/rem$/)&&(e+="px"),e},c.px2rem=function(t){var e=parseFloat(t)/this.rem;return"string"==typeof t&&t.match(/px$/)&&(e+="rem"),e}}(window,window.lib||(window.lib={}))},20:function(t,e,n){"use strict";var i=n(65);n.n(i).a},21:function(t,e,n){"use strict";var i=n(67);n.n(i).a},3:function(t,e,n){"use strict";function i(t){for(var e=t+"=",n=document.cookie.split(";"),i=0;i<n.length;i++){var a=n[i].trim();if(0==a.indexOf(e))return a.substring(e.length,a.length)}return""}function a(t){for(var e=(t+"=".repeat((4-t.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),n=window.atob(e),i=new Uint8Array(n.length),a=0;a<n.length;++a)i[a]=n.charCodeAt(a);return i}e.a=function(t,e){"serviceWorker"in navigator&&(navigator.serviceWorker.register(t,{scope:e}),navigator.serviceWorker.ready.then(function(t){!function(t){if("PushManager"in window)t.pushManager.getSubscription().then(function(e){const n={userVisibleOnly:!0,applicationServerKey:a("BBTV_sGMbDL47vda7QEleoJiiEV0iBGGHwXPeZFMgFLlr8OTFlF-l-7abUpy5bgQK70_SMVoITkNXPvm4q38pjM")};return t.pushManager.subscribe(n).then(function(t){let e=t.toJSON();fetch("/pwapush/save",{method:"POST",mode:"cors",credentials:"include",headers:{"x-csrf-token":i("csrfToken"),"content-type":"application/json"},body:JSON.stringify(e)}).then(t=>{console.log(t)})})})}(t)}),Notification.requestPermission().then(t=>{"denied"===Notification.permission&&console.log("Permission for Notifications was denied")}))}},40:function(t,e,n){"use strict";var i=n(69);n.n(i).a},41:function(t,e,n){"use strict";var i=n(71);n.n(i).a},42:function(t,e,n){"use strict";var i=n(73);n.n(i).a},47:function(t,e,n){"use strict";n.r(e);var i=n(7),a=function(){var t=this.$createElement,e=this._self._c||t;return e("div",{attrs:{id:"app"}},[e("router-view")],1)};a._withStripped=!0;var r={name:"app"},s=(n(17),n(0)),o=Object(s.a)(r,a,[],!1,null,null,null);o.options.__file="spa/app.vue";var l=o.exports,c=(n(2),n(10)),u=function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"site-wrap"},[e("header",{staticClass:"site-header"},[e("top")],1),this._v(" "),e("section",{staticClass:"site-content"},[e("div",{staticClass:"site-content-inner"},[e("router-view")],1)]),this._v(" "),e("footer",{staticClass:"site-footer"},[e("bottom")],1)])};u._withStripped=!0;var d=function(){var t=this.$createElement;this._self._c;return this._m(0)};d._withStripped=!0;var p={name:"top"},v=(n(18),Object(s.a)(p,d,[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"site-top"},[e("a",{attrs:{href:"#/"}},[e("h1")])])}],!1,null,null,null));v.options.__file="spa/component/top.vue";var f=v.exports,h=function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"site-bottom"},[e("a",{class:["videos"==this.select?"cur":""],attrs:{href:"#/index"}},[this._v("主页")]),this._v(" "),e("a",{class:["news"==this.select?"cur":""],attrs:{href:"#/index/news"}},[this._v("新闻")])])};h._withStripped=!0;var m={name:"bottom",computed:{select(){return this.$route.name}}},_=(n(19),Object(s.a)(m,h,[],!1,null,null,null));_.options.__file="spa/component/bottom.vue";var g={name:"page",components:{top:f,bottom:_.exports}},b=(n(20),Object(s.a)(g,u,[],!1,null,null,null));b.options.__file="spa/page/index.vue";var w=b.exports,y=function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"site-wrap no-bottom"},[e("header",{staticClass:"site-header"},[e("top")],1),this._v(" "),e("section",{staticClass:"site-content"},[e("div",{staticClass:"site-content-inner"},[e("router-view")],1)])])};y._withStripped=!0;var x={name:"nobottom",components:{top:f}},C=(n(21),Object(s.a)(x,y,[],!1,null,null,null));C.options.__file="spa/page/noBottom.vue";var S=C.exports,O=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"video-list"},[t.loaded?t._l(t.list,function(e,i){return n("a",{key:i,staticClass:"video-card",attrs:{href:"#/detail?id="+e.id}},[n("div",{style:{backgroundImage:"url("+e.icon+")"}}),t._v(" "),n("p",[t._v(t._s(e.title))])])}):t._l(t.loadShowNum,function(e,i){return n("div",{key:i,staticClass:"default-video-card"},[n("span"),t._v(" "),n("p")])})],2)};O._withStripped=!0;var j=n(6),E=n.n(j),k={cacheNService(t,e){"caches"in window&&caches.match(t).then(function(t){t&&t.json().then(function(t){e(t)})}),E.a.get(t).then(t=>{e(t.data)})}},T={name:"videos",data:()=>({list:[],loaded:!1,loadShowNum:12}),methods:{renderData(t){this.loaded=!0,0==t.error&&(this.list=t.data)},service(){k.cacheNService("/api/v1/videos",this.renderData)}},mounted(){this.service()}},N=(n(40),Object(s.a)(T,O,[],!1,null,null,null));N.options.__file="spa/page/content/index.vue";var $=N.exports,F=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"news-list"},[t.loaded?t._l(t.list,function(e,i){return n("a",{key:i,staticClass:"news-card",attrs:{href:"#/detail?id="+e.id}},[n("p",[t._v(t._s(e.sectitle))]),t._v(" "),n("div",{style:{backgroundImage:"url("+e.icon+")"}})])}):t._l(t.defaultNum,function(e,i){return n("div",{key:i,staticClass:"default-news-card"},[n("p"),t._v(" "),n("span")])})],2)};F._withStripped=!0;var M={name:"news",data:()=>({list:[],defaultNum:12,loaded:!1}),methods:{renderData(t){this.loaded=!0,0==t.error&&(this.list=t.data)},service(){k.cacheNService("/api/v1/news",this.renderData)}},mounted(){this.service()}},P=(n(41),Object(s.a)(M,F,[],!1,null,null,null));P.options.__file="spa/page/content/news.vue";var D=P.exports,L=function(){var t=this,e=t.$createElement,n=t._self._c||e;return t.detail&&t.loaded?n("div",{staticClass:"detail"},[n("div",{staticClass:"detail-title"},[t._v(t._s(t.detail.title))]),t._v(" "),n("div",{staticClass:"detail-user"},[t._v("作者："+t._s(t.detail.user))]),t._v(" "),n("div",{staticClass:"detail-img",style:{backgroundImage:"url("+t.detail.icon+")"}}),t._v(" "),n("p",{staticClass:"detail-content"},[t._v(t._s(t.detail.content))])]):n("div",{staticClass:"default-detail-card"},[n("div",{staticClass:"detail-title"}),t._v(" "),n("div",{staticClass:"detail-user"}),t._v(" "),n("div",{staticClass:"detail-img"}),t._v(" "),n("div",{staticClass:"detail-content"},t._l(12,function(t,e){return n("p",{key:e})}),0)])};L._withStripped=!0;var A={name:"videos",data:()=>({detail:null,loaded:!1}),methods:{renderData(t){this.loaded=!0,0==t.error&&(this.detail=t.data)},service(){let t="/api/v1/detail/"+this.$route.query.id;k.cacheNService(t,this.renderData)}},mounted(){this.service()}},V=(n(42),Object(s.a)(A,L,[],!1,null,null,null));V.options.__file="spa/page/content/detail.vue";var q=V.exports;i.a.use(c.a);var B=new c.a({routes:[{path:"/",redirect:"/index"},{path:"/index",name:"home",component:w,children:[{path:"",redirect:"videos"},{path:"videos",name:"videos",component:$},{path:"news",name:"news",component:D}]},{path:"/detail",name:"detail",component:S,children:[{path:"",component:q}]}]}),I=n(3);Object(I.a)("/sw-spa.js","/spa"),i.a.config.prodcutionTip=!1,new i.a({router:B,render:t=>t(l)}).$mount("#app")},59:function(t,e){},61:function(t,e){},63:function(t,e){},65:function(t,e){},67:function(t,e){},69:function(t,e){},71:function(t,e){},73:function(t,e){}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,