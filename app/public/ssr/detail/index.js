!function(e){function t(t){for(var r,a,c=t[0],s=t[1],l=t[2],f=0,d=[];f<c.length;f++)a=c[f],i[a]&&d.push(i[a][0]),i[a]=0;for(r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r]);for(u&&u(t);d.length;)d.shift()();return o.push.apply(o,l||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],r=!0,c=1;c<n.length;c++){var s=n[c];0!==i[s]&&(r=!1)}r&&(o.splice(t--,1),e=a(a.s=n[0]))}return e}var r={},i={3:0},o=[];function a(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=e,a.c=r,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(n,r,function(t){return e[t]}.bind(null,r));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="";var c=window.webpackJsonp=window.webpackJsonp||[],s=c.push.bind(c);c.push=t,c=c.slice();for(var l=0;l<c.length;l++)t(c[l]);var u=s;o.push([49,0]),n()}({2:function(e,t){!function(e,t){var n,r=e.document,i=r.documentElement,o=r.querySelector('meta[name="viewport"]'),a=r.querySelector('meta[name="flexible"]'),c=0,s=0,l=t.flexible||(t.flexible={});if(o)(f=o.getAttribute("content").match(/initial\-scale=([\d\.]+)/))&&(s=parseFloat(f[1]),c=parseInt(1/s));else if(a){var u=a.getAttribute("content");if(u){var f=u.match(/initial\-dpr=([\d\.]+)/),d=u.match(/maximum\-dpr=([\d\.]+)/);f&&(c=parseFloat(f[1]),s=parseFloat((1/c).toFixed(2))),d&&(c=parseFloat(d[1]),s=parseFloat((1/c).toFixed(2)))}}if(!c&&!s){var p=(e.navigator.appVersion.match(/android/gi),e.navigator.appVersion.match(/iphone/gi)),m=e.devicePixelRatio;s=1/(c=p?m>=3&&(!c||c>=3)?3:m>=2&&(!c||c>=2)?2:1:1)}if(i.setAttribute("data-dpr",c),!o)if((o=r.createElement("meta")).setAttribute("name","viewport"),o.setAttribute("content","initial-scale="+s+", maximum-scale="+s+", minimum-scale="+s+", user-scalable=no"),i.firstElementChild)i.firstElementChild.appendChild(o);else{var v=r.createElement("div");v.appendChild(o),r.write(v.innerHTML)}function h(){var t=i.getBoundingClientRect().width/10;i.style.fontSize=t+"px",l.rem=e.rem=t}e.addEventListener("resize",function(){clearTimeout(n),n=setTimeout(h,300)},!1),e.addEventListener("orientationchange",function(){clearTimeout(n),n=setTimeout(h,300)},!1),e.addEventListener("pageshow",function(e){e.persisted&&(clearTimeout(n),n=setTimeout(h,300))},!1),"complete"===r.readyState?r.body.style.fontSize=12*c+"px":r.addEventListener("DOMContentLoaded",function(){r.body.style.fontSize=12*c+"px"},!1),h(),l.dpr=e.dpr=c,l.refreshRem=h,l.rem2px=function(e){var t=parseFloat(e)*this.rem;return"string"==typeof e&&e.match(/rem$/)&&(t+="px"),t},l.px2rem=function(e){var t=parseFloat(e)/this.rem;return"string"==typeof e&&e.match(/px$/)&&(t+="rem"),t}}(window,window.lib||(window.lib={}))},3:function(e,t,n){"use strict";function r(e,t){window.addEventListener("load",function(){navigator.serviceWorker.register(e,{scope:t}).then(function(e){console.log("ServiceWorker registration successful with scope: ",e.scope)}).catch(function(e){console.log("ServiceWorker registration failed: ",e)})})}t.a=function(e,t){"serviceWorker"in navigator&&(navigator.serviceWorker?navigator.serviceWorker.getRegistration(t).then(function(n){n?console.log(n):r(e,t)}):r(e,t),Notification.requestPermission().then(e=>{"denied"===Notification.permission&&console.log("Permission for Notifications was denied")}))}},4:function(e,t,n){"use strict";n(76),n(78),n(80)},49:function(e,t,n){"use strict";n.r(t);var r=n(6);n.n(r)()(".header").html("jquery change two html lalala");n(82),n(2);var i=n(3);n(4);Object(i.a)("/sw-ssr.js","/ssr")},76:function(e,t){},78:function(e,t){},80:function(e,t){},82:function(e,t){}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vY29tbW9uL2pzL2ZsZXhpYmxlL3JlbS5qcyIsIndlYnBhY2s6Ly8vLi9jb21tb24vanMvbG9hZHN3LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudC9sYXlvdXQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3NyL2RldGFpbC9qcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zc3IvZGV0YWlsL2luZGV4LmpzIl0sIm5hbWVzIjpbIndlYnBhY2tKc29ucENhbGxiYWNrIiwiZGF0YSIsIm1vZHVsZUlkIiwiY2h1bmtJZCIsImNodW5rSWRzIiwibW9yZU1vZHVsZXMiLCJleGVjdXRlTW9kdWxlcyIsImkiLCJyZXNvbHZlcyIsImxlbmd0aCIsImluc3RhbGxlZENodW5rcyIsInB1c2giLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJtb2R1bGVzIiwicGFyZW50SnNvbnBGdW5jdGlvbiIsInNoaWZ0IiwiZGVmZXJyZWRNb2R1bGVzIiwiYXBwbHkiLCJjaGVja0RlZmVycmVkTW9kdWxlcyIsInJlc3VsdCIsImRlZmVycmVkTW9kdWxlIiwiZnVsZmlsbGVkIiwiaiIsImRlcElkIiwic3BsaWNlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsInMiLCJpbnN0YWxsZWRNb2R1bGVzIiwiMyIsImV4cG9ydHMiLCJtb2R1bGUiLCJsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInAiLCJqc29ucEFycmF5Iiwid2luZG93Iiwib2xkSnNvbnBGdW5jdGlvbiIsInNsaWNlIiwid2luIiwibGliIiwidGltZXIiLCJkb2MiLCJkb2N1bWVudCIsImRvY0VsZW0iLCJkb2N1bWVudEVsZW1lbnQiLCJ2cE1ldGEiLCJxdWVyeVNlbGVjdG9yIiwiZmxleE1ldGEiLCJkcHIiLCJzY2FsZSIsImZsZXhpYmxlIiwiaW5pdGlhbCIsImdldEF0dHJpYnV0ZSIsIm1hdGNoIiwicGFyc2VGbG9hdCIsInBhcnNlSW50IiwiZmxleE1ldGFDb250ZW50IiwibWF4aW11bSIsInRvRml4ZWQiLCJ1IiwibmF2aWdhdG9yIiwiYXBwVmVyc2lvbiIsIl9kcHIiLCJkZXZpY2VQaXhlbFJhdGlvIiwic2V0QXR0cmlidXRlIiwiY3JlYXRlRWxlbWVudCIsImZpcnN0RWxlbWVudENoaWxkIiwiYXBwZW5kQ2hpbGQiLCJkaXYiLCJ3cml0ZSIsImlubmVySFRNTCIsInNldEZvbnRTaXplIiwiYmFzZVNpemUiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ3aWR0aCIsInN0eWxlIiwiZm9udFNpemUiLCJyZW0iLCJhZGRFdmVudExpc3RlbmVyIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsImUiLCJwZXJzaXN0ZWQiLCJyZWFkeVN0YXRlIiwiYm9keSIsInJlZnJlc2hSZW0iLCJyZW0ycHgiLCJ0aGlzIiwicHgycmVtIiwicmVnaXN0ZXIiLCJzdyIsInNjb3BlIiwic2VydmljZVdvcmtlciIsInRoZW4iLCJyZWdpc3RyYXRpb24iLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJlcnIiLCJfX3dlYnBhY2tfZXhwb3J0c19fIiwiZ2V0UmVnaXN0cmF0aW9uIiwiTm90aWZpY2F0aW9uIiwicmVxdWVzdFBlcm1pc3Npb24iLCJncmFudCIsInBlcm1pc3Npb24iLCIkIiwiaHRtbCIsImxvYWRzdyJdLCJtYXBwaW5ncyI6ImFBQ0EsU0FBQUEsRUFBQUMsR0FRQSxJQVBBLElBTUFDLEVBQUFDLEVBTkFDLEVBQUFILEVBQUEsR0FDQUksRUFBQUosRUFBQSxHQUNBSyxFQUFBTCxFQUFBLEdBSUFNLEVBQUEsRUFBQUMsRUFBQSxHQUNR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QUFJMkMsV0FBVzFDLEdBQUsyRSxLQUFLVixJQUs3QixNQUhJLGlCQUFtQmpFLEdBQUtBLEVBQUV5QyxNQUFNLFNBQ2xDMUMsR0FBSyxPQUVBQSxHQWpKWCxDQW1KRXdCLE9BQVFBLE9BQU9JLE1BQVFKLE9BQU9JLElBQU0scUNDbEp4QyxTQUFTa0QsRUFBU0MsRUFBR0MsR0FDakJ4RCxPQUFPMkMsaUJBQWlCLE9BQVEsV0FDNUJsQixVQUFVZ0MsY0FBY0gsU0FBU0MsRUFBSSxDQUFDQyxVQUNqQ0UsS0FBSyxTQUFVQyxHQUVaQyxRQUFRQyxJQUFJLHFEQUFzREYsRUFBYUgsU0FFbEZNLE1BQU0sU0FBVUMsR0FHYkgsUUFBUUMsSUFBSSxzQ0FBdUNFLE9BY3BEQyxFQUFBLFdBQVNULEVBQUdDLEdBQ25CLGtCQUFtQi9CLFlBRWhCQSxVQUFVZ0MsY0FDVGhDLFVBQVVnQyxjQUFjUSxnQkFBZ0JULEdBQU9FLEtBQUssU0FBU0MsR0FDdERBLEVBQ0NDLFFBQVFDLElBQUlGLEdBR1pMLEVBQVNDLEVBQUdDLEtBS3BCRixFQUFTQyxFQUFHQyxHQXZCcEJVLGFBQWFDLG9CQUFvQlQsS0FBS1UsSUFDRixXQUE1QkYsYUFBYUcsWUFDYlQsUUFBUUMsSUFBSSwrRUNsQnhCN0YsRUFBQSxJQUFBQSxFQUFBLElBQUFBLEVBQUEsNkRDQ0FzRyxHQUFFLFdBQVdDLEtBQUssNERDR2xCQyxZQUFPLGFBQWEiLCJmaWxlIjoic3NyL2RldGFpbC9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIGluc3RhbGwgYSBKU09OUCBjYWxsYmFjayBmb3IgY2h1bmsgbG9hZGluZ1xuIFx0ZnVuY3Rpb24gd2VicGFja0pzb25wQ2FsbGJhY2soZGF0YSkge1xuIFx0XHR2YXIgY2h1bmtJZHMgPSBkYXRhWzBdO1xuIFx0XHR2YXIgbW9yZU1vZHVsZXMgPSBkYXRhWzFdO1xuIFx0XHR2YXIgZXhlY3V0ZU1vZHVsZXMgPSBkYXRhWzJdO1xuXG4gXHRcdC8vIGFkZCBcIm1vcmVNb2R1bGVzXCIgdG8gdGhlIG1vZHVsZXMgb2JqZWN0LFxuIFx0XHQvLyB0aGVuIGZsYWcgYWxsIFwiY2h1bmtJZHNcIiBhcyBsb2FkZWQgYW5kIGZpcmUgY2FsbGJhY2tcbiBcdFx0dmFyIG1vZHVsZUlkLCBjaHVua0lkLCBpID0gMCwgcmVzb2x2ZXMgPSBbXTtcbiBcdFx0Zm9yKDtpIDwgY2h1bmtJZHMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRjaHVua0lkID0gY2h1bmtJZHNbaV07XG4gXHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdKSB7XG4gXHRcdFx0XHRyZXNvbHZlcy5wdXNoKGluc3RhbGxlZENodW5rc1tjaHVua0lkXVswXSk7XG4gXHRcdFx0fVxuIFx0XHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IDA7XG4gXHRcdH1cbiBcdFx0Zm9yKG1vZHVsZUlkIGluIG1vcmVNb2R1bGVzKSB7XG4gXHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vcmVNb2R1bGVzLCBtb2R1bGVJZCkpIHtcbiBcdFx0XHRcdG1vZHVsZXNbbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRpZihwYXJlbnRKc29ucEZ1bmN0aW9uKSBwYXJlbnRKc29ucEZ1bmN0aW9uKGRhdGEpO1xuXG4gXHRcdHdoaWxlKHJlc29sdmVzLmxlbmd0aCkge1xuIFx0XHRcdHJlc29sdmVzLnNoaWZ0KCkoKTtcbiBcdFx0fVxuXG4gXHRcdC8vIGFkZCBlbnRyeSBtb2R1bGVzIGZyb20gbG9hZGVkIGNodW5rIHRvIGRlZmVycmVkIGxpc3RcbiBcdFx0ZGVmZXJyZWRNb2R1bGVzLnB1c2guYXBwbHkoZGVmZXJyZWRNb2R1bGVzLCBleGVjdXRlTW9kdWxlcyB8fCBbXSk7XG5cbiBcdFx0Ly8gcnVuIGRlZmVycmVkIG1vZHVsZXMgd2hlbiBhbGwgY2h1bmtzIHJlYWR5XG4gXHRcdHJldHVybiBjaGVja0RlZmVycmVkTW9kdWxlcygpO1xuIFx0fTtcbiBcdGZ1bmN0aW9uIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCkge1xuIFx0XHR2YXIgcmVzdWx0O1xuIFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgZGVmZXJyZWRNb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0dmFyIGRlZmVycmVkTW9kdWxlID0gZGVmZXJyZWRNb2R1bGVzW2ldO1xuIFx0XHRcdHZhciBmdWxmaWxsZWQgPSB0cnVlO1xuIFx0XHRcdGZvcih2YXIgaiA9IDE7IGogPCBkZWZlcnJlZE1vZHVsZS5sZW5ndGg7IGorKykge1xuIFx0XHRcdFx0dmFyIGRlcElkID0gZGVmZXJyZWRNb2R1bGVbal07XG4gXHRcdFx0XHRpZihpbnN0YWxsZWRDaHVua3NbZGVwSWRdICE9PSAwKSBmdWxmaWxsZWQgPSBmYWxzZTtcbiBcdFx0XHR9XG4gXHRcdFx0aWYoZnVsZmlsbGVkKSB7XG4gXHRcdFx0XHRkZWZlcnJlZE1vZHVsZXMuc3BsaWNlKGktLSwgMSk7XG4gXHRcdFx0XHRyZXN1bHQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IGRlZmVycmVkTW9kdWxlWzBdKTtcbiBcdFx0XHR9XG4gXHRcdH1cbiBcdFx0cmV0dXJuIHJlc3VsdDtcbiBcdH1cblxuIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3NcbiBcdC8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuIFx0Ly8gUHJvbWlzZSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbiBcdHZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG4gXHRcdDM6IDBcbiBcdH07XG5cbiBcdHZhciBkZWZlcnJlZE1vZHVsZXMgPSBbXTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0dmFyIGpzb25wQXJyYXkgPSB3aW5kb3dbXCJ3ZWJwYWNrSnNvbnBcIl0gPSB3aW5kb3dbXCJ3ZWJwYWNrSnNvbnBcIl0gfHwgW107XG4gXHR2YXIgb2xkSnNvbnBGdW5jdGlvbiA9IGpzb25wQXJyYXkucHVzaC5iaW5kKGpzb25wQXJyYXkpO1xuIFx0anNvbnBBcnJheS5wdXNoID0gd2VicGFja0pzb25wQ2FsbGJhY2s7XG4gXHRqc29ucEFycmF5ID0ganNvbnBBcnJheS5zbGljZSgpO1xuIFx0Zm9yKHZhciBpID0gMDsgaSA8IGpzb25wQXJyYXkubGVuZ3RoOyBpKyspIHdlYnBhY2tKc29ucENhbGxiYWNrKGpzb25wQXJyYXlbaV0pO1xuIFx0dmFyIHBhcmVudEpzb25wRnVuY3Rpb24gPSBvbGRKc29ucEZ1bmN0aW9uO1xuXG5cbiBcdC8vIGFkZCBlbnRyeSBtb2R1bGUgdG8gZGVmZXJyZWQgbGlzdFxuIFx0ZGVmZXJyZWRNb2R1bGVzLnB1c2goWzQ5LDBdKTtcbiBcdC8vIHJ1biBkZWZlcnJlZCBtb2R1bGVzIHdoZW4gcmVhZHlcbiBcdHJldHVybiBjaGVja0RlZmVycmVkTW9kdWxlcygpO1xuIiwiISBmdW5jdGlvbih3aW4sIGxpYikge1xuICAgIHZhciB0aW1lcixcbiAgICAgIGRvYyA9IHdpbi5kb2N1bWVudCxcbiAgICAgIGRvY0VsZW0gPSBkb2MuZG9jdW1lbnRFbGVtZW50LFxuICBcbiAgICAgIHZwTWV0YSA9IGRvYy5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9XCJ2aWV3cG9ydFwiXScpLFxuICAgICAgZmxleE1ldGEgPSBkb2MucXVlcnlTZWxlY3RvcignbWV0YVtuYW1lPVwiZmxleGlibGVcIl0nKSxcbiAgXG4gICAgICBkcHIgPSAwLFxuICAgICAgc2NhbGUgPSAwLFxuICBcbiAgICAgIGZsZXhpYmxlID0gbGliLmZsZXhpYmxlIHx8IChsaWIuZmxleGlibGUgPSB7fSk7XG4gIFxuICAgIC8vIOiuvue9ruS6hiB2aWV3cG9ydCBtZXRhXG4gICAgaWYgKHZwTWV0YSkge1xuICBcbiAgICAgIHZhciBpbml0aWFsID0gdnBNZXRhLmdldEF0dHJpYnV0ZShcImNvbnRlbnRcIikubWF0Y2goL2luaXRpYWxcXC1zY2FsZT0oW1xcZFxcLl0rKS8pO1xuICBcbiAgICAgIGlmIChpbml0aWFsKSB7XG4gICAgICAgIHNjYWxlID0gcGFyc2VGbG9hdChpbml0aWFsWzFdKTsgLy8g5bey6K6+572u55qEIGluaXRpYWxTY2FsZVxuICAgICAgICBkcHIgPSBwYXJzZUludCgxIC8gc2NhbGUpOyAvLyDorr7lpIflg4/ntKDmr5QgZGV2aWNlUGl4ZWxSYXRpb1xuICAgICAgfVxuICBcbiAgICB9XG4gICAgLy8g6K6+572u5LqGIGZsZXhpYmxlIE1ldGFcbiAgICBlbHNlIGlmIChmbGV4TWV0YSkge1xuICAgICAgdmFyIGZsZXhNZXRhQ29udGVudCA9IGZsZXhNZXRhLmdldEF0dHJpYnV0ZShcImNvbnRlbnRcIik7XG4gICAgICBpZiAoZmxleE1ldGFDb250ZW50KSB7XG4gIFxuICAgICAgICB2YXIgaW5pdGlhbCA9IGZsZXhNZXRhQ29udGVudC5tYXRjaCgvaW5pdGlhbFxcLWRwcj0oW1xcZFxcLl0rKS8pLFxuICAgICAgICAgIG1heGltdW0gPSBmbGV4TWV0YUNvbnRlbnQubWF0Y2goL21heGltdW1cXC1kcHI9KFtcXGRcXC5dKykvKTtcbiAgXG4gICAgICAgIGlmIChpbml0aWFsKSB7XG4gICAgICAgICAgZHByID0gcGFyc2VGbG9hdChpbml0aWFsWzFdKTtcbiAgICAgICAgICBzY2FsZSA9IHBhcnNlRmxvYXQoKDEgLyBkcHIpLnRvRml4ZWQoMikpO1xuICAgICAgICB9XG4gIFxuICAgICAgICBpZiAobWF4aW11bSkge1xuICAgICAgICAgIGRwciA9IHBhcnNlRmxvYXQobWF4aW11bVsxXSk7XG4gICAgICAgICAgc2NhbGUgPSBwYXJzZUZsb2F0KCgxIC8gZHByKS50b0ZpeGVkKDIpKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgXG4gICAgLy8gdmlld3BvcnQg5oiWIGZsZXhpYmxlXG4gICAgLy8gbWV0YSDlnYfmnKrorr7nva5cbiAgICBpZiAoIWRwciAmJiAhc2NhbGUpIHtcbiAgICAgIC8vIFFTVFxuICAgICAgLy8g6L+Z6YeM55qEIOesrOS4gOWPpeacieS7gOS5iOeUqCA/XG4gICAgICAvLyDlkowgQW5kcm9pZCDmnInmr5vlhbPns7sgP1xuICAgICAgdmFyIHUgPSAod2luLm5hdmlnYXRvci5hcHBWZXJzaW9uLm1hdGNoKC9hbmRyb2lkL2dpKSwgd2luLm5hdmlnYXRvci5hcHBWZXJzaW9uLm1hdGNoKC9pcGhvbmUvZ2kpKSxcbiAgICAgICAgX2RwciA9IHdpbi5kZXZpY2VQaXhlbFJhdGlvO1xuICBcbiAgICAgIC8vIOaJgOS7pei/memHjOS8vOS5juaYr+WwhuaJgOaciSBBbmRyb2lkIOiuvuWkh+mDveiuvue9ruS4uiAxIOS6hlxuICAgICAgZHByID0gdSA/ICgoX2RwciA+PSAzICYmICghZHByIHx8IGRwciA+PSAzKSkgPyAzIDogKF9kcHIgPj0gMiAmJiAoIWRwciB8fCBkcHIgPj0gMikpID8gMiA6IDEpIDogMTtcbiAgXG4gICAgICBzY2FsZSA9IDEgLyBkcHI7XG4gICAgfVxuICBcbiAgICBkb2NFbGVtLnNldEF0dHJpYnV0ZShcImRhdGEtZHByXCIsIGRwcik7XG4gIFxuICAgIC8vIOaPkuWFpSB2aWV3cG9ydCBtZXRhXG4gICAgaWYgKCF2cE1ldGEpIHtcbiAgICAgIHZwTWV0YSA9IGRvYy5jcmVhdGVFbGVtZW50KFwibWV0YVwiKTtcbiAgXG4gICAgICB2cE1ldGEuc2V0QXR0cmlidXRlKFwibmFtZVwiLCBcInZpZXdwb3J0XCIpO1xuICAgICAgdnBNZXRhLnNldEF0dHJpYnV0ZShcImNvbnRlbnRcIixcbiAgICAgICAgXCJpbml0aWFsLXNjYWxlPVwiICsgc2NhbGUgKyBcIiwgbWF4aW11bS1zY2FsZT1cIiArIHNjYWxlICsgXCIsIG1pbmltdW0tc2NhbGU9XCIgKyBzY2FsZSArIFwiLCB1c2VyLXNjYWxhYmxlPW5vXCIpO1xuICBcbiAgICAgIGlmIChkb2NFbGVtLmZpcnN0RWxlbWVudENoaWxkKSB7XG4gICAgICAgIGRvY0VsZW0uZmlyc3RFbGVtZW50Q2hpbGQuYXBwZW5kQ2hpbGQodnBNZXRhKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIGRpdiA9IGRvYy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBkaXYuYXBwZW5kQ2hpbGQodnBNZXRhKTtcbiAgICAgICAgZG9jLndyaXRlKGRpdi5pbm5lckhUTUwpO1xuICAgICAgfVxuICAgIH1cbiAgXG4gICAgZnVuY3Rpb24gc2V0Rm9udFNpemUoKSB7XG4gICAgICB2YXIgd2luV2lkdGggPSBkb2NFbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoO1xuICBcbiAgICAgIC8vIGlmICh3aW5XaWR0aCAvIGRwciA+ICg3NTAgLyAyKSkge1xuICAgICAgLy8gICAod2luV2lkdGggPSAoNzUwIC8gMikgKiBkcHIpO1xuICAgICAgLy8gfVxuICBcbiAgICAgIC8vIOagueiKgueCuSBmb250U2l6ZSDmoLnmja7lrr3luqblhrPlrppcbiAgICAgIHZhciBiYXNlU2l6ZSA9IHdpbldpZHRoIC8gMTA7XG4gIFxuICAgICAgZG9jRWxlbS5zdHlsZS5mb250U2l6ZSA9IGJhc2VTaXplICsgXCJweFwiO1xuICAgICAgZmxleGlibGUucmVtID0gd2luLnJlbSA9IGJhc2VTaXplO1xuICAgIH1cbiAgXG4gICAgLy8g6LCD5pW056qX5Y+j5pe26YeN572uXG4gICAgd2luLmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgZnVuY3Rpb24oKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KHNldEZvbnRTaXplLCAzMDApO1xuICAgIH0sIGZhbHNlKTtcbiAgXG4gIFxuICAgIC8vIOi/meS4gOauteaYr+aIkeiHquW3seWKoOeahFxuICAgIC8vIG9yaWVudGF0aW9uY2hhbmdlIOaXtuS5n+mcgOimgemHjeeul+S4i+WQp1xuICAgIHdpbi5hZGRFdmVudExpc3RlbmVyKFwib3JpZW50YXRpb25jaGFuZ2VcIiwgZnVuY3Rpb24oKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KHNldEZvbnRTaXplLCAzMDApO1xuICAgIH0sIGZhbHNlKTtcbiAgXG4gIFxuICAgIC8vIHBhZ2VzaG93XG4gICAgLy8ga2V5d29yZDog5YCS6YCAIOe8k+WtmOebuOWFs1xuICAgIHdpbi5hZGRFdmVudExpc3RlbmVyKFwicGFnZXNob3dcIiwgZnVuY3Rpb24oZSkge1xuICAgICAgaWYgKGUucGVyc2lzdGVkKSB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgIHRpbWVyID0gc2V0VGltZW91dChzZXRGb250U2l6ZSwgMzAwKTtcbiAgICAgIH1cbiAgICB9LCBmYWxzZSk7XG4gIFxuICAgIC8vIOiuvue9ruWfuuWHhuWtl+S9k1xuICAgIGlmIChcImNvbXBsZXRlXCIgPT09IGRvYy5yZWFkeVN0YXRlKSB7XG4gICAgICBkb2MuYm9keS5zdHlsZS5mb250U2l6ZSA9IDEyICogZHByICsgXCJweFwiO1xuICAgIH0gZWxzZSB7XG4gICAgICBkb2MuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgIGRvYy5ib2R5LnN0eWxlLmZvbnRTaXplID0gMTIgKiBkcHIgKyBcInB4XCI7XG4gICAgICB9LCBmYWxzZSk7XG4gICAgfVxuICBcbiAgICBzZXRGb250U2l6ZSgpO1xuICBcbiAgICBmbGV4aWJsZS5kcHIgPSB3aW4uZHByID0gZHByO1xuICBcbiAgICBmbGV4aWJsZS5yZWZyZXNoUmVtID0gc2V0Rm9udFNpemU7XG4gIFxuICAgIGZsZXhpYmxlLnJlbTJweCA9IGZ1bmN0aW9uKGQpIHtcbiAgICAgIHZhciBjID0gcGFyc2VGbG9hdChkKSAqIHRoaXMucmVtO1xuICAgICAgaWYgKFwic3RyaW5nXCIgPT0gdHlwZW9mIGQgJiYgZC5tYXRjaCgvcmVtJC8pKSB7XG4gICAgICAgIGMgKz0gXCJweFwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGM7XG4gICAgfTtcbiAgXG4gICAgZmxleGlibGUucHgycmVtID0gZnVuY3Rpb24oZCkge1xuICAgICAgdmFyIGMgPSBwYXJzZUZsb2F0KGQpIC8gdGhpcy5yZW07XG4gIFxuICAgICAgaWYgKFwic3RyaW5nXCIgPT0gdHlwZW9mIGQgJiYgZC5tYXRjaCgvcHgkLykpIHtcbiAgICAgICAgYyArPSBcInJlbVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGM7XG4gICAgfVxuICB9KHdpbmRvdywgd2luZG93LmxpYiB8fCAod2luZG93LmxpYiA9IHt9KSk7XG4gICIsIlxuZnVuY3Rpb24gcmVnaXN0ZXIoc3csc2NvcGUpe1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5yZWdpc3Rlcihzdywge3Njb3BlfSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZWdpc3RyYXRpb24pIHtcbiAgICAgICAgICAgICAgICAvLyDms6jlhozmiJDlip9cbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnU2VydmljZVdvcmtlciByZWdpc3RyYXRpb24gc3VjY2Vzc2Z1bCB3aXRoIHNjb3BlOiAnLCByZWdpc3RyYXRpb24uc2NvcGUpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG5cbiAgICAgICAgICAgICAgICAvLyDms6jlhozlpLHotKU6KFxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTZXJ2aWNlV29ya2VyIHJlZ2lzdHJhdGlvbiBmYWlsZWQ6ICcsIGVycik7XG4gICAgICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIHN1Yigpe1xuICAgIE5vdGlmaWNhdGlvbi5yZXF1ZXN0UGVybWlzc2lvbigpLnRoZW4oZ3JhbnQgPT4ge1xuICAgICAgICBpZiAoTm90aWZpY2F0aW9uLnBlcm1pc3Npb24gPT09ICdkZW5pZWQnKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnUGVybWlzc2lvbiBmb3IgTm90aWZpY2F0aW9ucyB3YXMgZGVuaWVkJyk7XG4gICAgICAgIH1cbiAgICB9KVxufVxuZnVuY3Rpb24gc3luYyhzd1JlZ2lzdHJhdGlvbil7XG4gICAgc3dSZWdpc3RyYXRpb24uc3luYy5yZWdpc3RlcigncWllU3luYycpO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3csc2NvcGUpe1xuICAgIGlmICgnc2VydmljZVdvcmtlcicgaW4gbmF2aWdhdG9yKSB7XG4gICAgICAgIC8vIHNlcnZpY2VXb3JrZXIuZ2V0UmVnaXN0cmF0aW9uIOWkhOS6juiNieahiOmYtuautSDnlKjkuo7ojrflj5blvZPliY3kvZznlKjln58gc2VydmljZXdvcmtlciDkv6Hmga9cbiAgICAgICAgaWYobmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIpe1xuICAgICAgICAgICAgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuZ2V0UmVnaXN0cmF0aW9uKHNjb3BlKS50aGVuKGZ1bmN0aW9uKHJlZ2lzdHJhdGlvbikge1xuICAgICAgICAgICAgICAgIGlmKHJlZ2lzdHJhdGlvbil7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlZ2lzdHJhdGlvbilcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDtcbiAgICAgICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgcmVnaXN0ZXIoc3csc2NvcGUpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgcmVnaXN0ZXIoc3csc2NvcGUpXG4gICAgICAgIH1cbiAgICAgICAgLy8gcmVnaXN0ZXIoc3csc2NvcGUpXG4gICAgICAgIC8vIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlYWR5LnRoZW4oZnVuY3Rpb24oc3dSZWdpc3RyYXRpb24pIHtcbiAgICAgICAgLy8gICAgIHN5bmMoc3dSZWdpc3RyYXRpb24pXG4gICAgICAgIC8vIH0pXG5cbiAgICAgICAgc3ViKClcbiAgICAgICAgLy8gdmFyIGEgPSBuZXcgTm90aWZpY2F0aW9uKCfkvIHpuYXkvZPogrLmg7PopoHmmL7npLrpgJrnn6UnLHtcbiAgICAgICAgLy8gICAgIGJvZHk6J+S8gem5heS9k+iCsuacieS9oOaDs+imgScsXG4gICAgICAgIC8vICAgICB0YWc6J2RpdicsXG4gICAgICAgIC8vICAgICBpY29uOidodHRwczovL3RpbWdzYS5iYWlkdS5jb20vdGltZz9pbWFnZSZxdWFsaXR5PTgwJnNpemU9Yjk5OTlfMTAwMDAmc2VjPTE1NTMwNzE4NTMxNDcmZGk9ODdmOTRhNWRjMWYyMGIyMmViN2RlZDFlN2Y3OTViNmUmaW1ndHlwZT0wJnNyYz1odHRwJTNBJTJGJTJGZjIuZG4uYW5xdS5jb20lMkZkb3duJTJGWmpObFlRJTNEJTNEJTJGYWxsaW1nJTJGMTIwNzI4JTJGMS0xMjBIUDAzNDEyLmpwZycsXG4gICAgICAgIC8vICAgICBpbWFnZTonaHR0cDovL3N0YXRpYy5xaWVjZG4uY29tL3N0YXRpYy1tb2JpbGUvMDMwODE4NTkvY29tbW9uL3Jlcy9pbmRleC9sb2dvLW5ldy5wbmcnXG4gICAgICAgIC8vIH0pXG4gICAgfVxufVxuIiwiaW1wb3J0ICcuL3N0eWxlL2luZGV4LnNjc3MnO1xuXG5pbXBvcnQgJ0AvY29tcG9uZW50L3RvcC9zdHlsZS9pbmRleC5zY3NzJztcbmltcG9ydCAnQC9jb21wb25lbnQvYm90dG9tL3N0eWxlL2luZGV4LnNjc3MnXG5cbiIsImltcG9ydCAkIGZyb20gJ2pxdWVyeSdcbiQoJy5oZWFkZXInKS5odG1sKCdqcXVlcnkgY2hhbmdlIHR3byBodG1sIGxhbGFsYScpIiwiaW1wb3J0ICcuL2pzL2luZGV4J1xuaW1wb3J0ICcuL3N0eWxlL2luZGV4LnNjc3MnXG5pbXBvcnQgJ3JlbSdcbmltcG9ydCBsb2Fkc3cgZnJvbSAnQC9jb21tb24vanMvbG9hZHN3JztcbmxvYWRzdygnL3N3LXNzci5qcycsJy9zc3InKVxuaW1wb3J0ICdAL2NvbXBvbmVudC9sYXlvdXQvaW5kZXgnIl0sInNvdXJjZVJvb3QiOiIifQ==